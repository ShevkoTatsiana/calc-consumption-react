type Query {
  materials: [Material]
  material(id: ID): Material
  result(id: ID): Result
  gallery: [Result]
}

type Mutation {
  addMaterial(name: String!, consumption: Float): Material
  addConsumptionItem(input: ConsumptionInput): ConsumptionItem
  deleteConsumptionItem(id: ID!): ConsumptionItem
  addResult: Result
  deleteResult(id: ID!): Result
  updateResult(id: ID, title: String, grand_total: Float): Result,
  deleteManyResults: [Result]
}

type Material {
    id: ID!
    name: String!
    consumption: Float
}

type ConsumptionItem {
    id: ID!
    name: String!
    area: Float
    height: Float
    consumption: Float
    general_consumption: Float
    coast: Float
    includeIn: Result
}

input ConsumptionInput {
    name: String!
    area: Float
    height: Float
    consumption: Float
    general_consumption: Float
    coast: Float
    resultID: String
}

type Result {
    id: ID!
    consumption_items: [ConsumptionItem]
    title: String
    grand_total: Float
}